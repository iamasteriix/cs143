###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.1-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . /usr/src/app/
#RUN flake8 --ignore=E501,F401 .

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.1-slim-buster

# create directory for the app user
#RUN mkdir -p /home/app

# create the app user
#RUN addgroup -S app && adduser -S app -G app
#RUN addgroup app && adduser app && usermod -a -G app app
RUN adduser app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install pspacy dependencies
RUN apt-get update && apt-get install -y \
    autoconf \
    gcc \
    git \
    make \
    python3 \
    python3-pip \
    sudo \
    wget

# install pspacy
ADD https://api.github.com/repos/mikeizbicki/pspacy/git/refs/heads/master /tmp/pspacy.version
RUN cd /tmp \
 && git clone https://github.com/mikeizbicki/pspacy \
 && cd pspacy \
 && sh install_dependencies.sh \
 && cp pspacy.py $APP_HOME/pspacy.py

# install system dependencies
RUN apt-get update && apt-get install -y netcat

# install dependencies
#RUN cd $APP_HOME
#RUN pip install --upgrade pip
#COPY ./requirements.txt /usr/src/app/requirements.txt
#RUN pwd && whoami && ls -la && pip install -r requirements.txt


# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint.sh
COPY ./entrypoint.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app $APP_HOME

# change to the app user
USER app

# run entrypoint.sh
ENTRYPOINT ["/home/app/web/entrypoint.sh"]
